swagger: "2.0"
info:
  version: "0.0.1"
  title: Trend musix
host: localhost:10010
basePath: /
#
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /track/get-track:
    x-swagger-router-controller: track
    get:
      description: Get track's data
      operationId: getTrack
      parameters:
        - name: id
          in: query
          description: Track's id
          required: true
          type: string
        - name: token
          in: query
          description: token 
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TrackResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /track/get-home-track:
    x-swagger-router-controller: track
    get:
      description: Get track's data for home page
      operationId: getHomeTrack
      parameters:
        - name: key
          in: query
          description: Token
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TrackResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /test:
    x-swagger-router-controller: user
    get:
      description: Get value of the key
      operationId: test
      parameters:
        - name: key
          in: query
          description: Token
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /user/signup:
    x-swagger-router-controller: user
    post:
      description: Sign up
      operationId: signup
      parameters:
        - name: user_info_signup
          in: body
          description: User info sign up
          required: true
          schema:
            $ref: "#/definitions/UserInfoSignUp"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /user/login:
    x-swagger-router-controller: user
    post:
      description: Login and get token for user
      operationId: login
      parameters:
        - name: user_info
          in: body
          description: User info
          required: true
          schema:
            $ref: "#/definitions/UserInfo"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /user/favorite:
    x-swagger-router-controller: user
    get:
      description: Get list favorite song
      operationId: getFavoriteSong
      parameters:
        - name: token
          in: query
          description: Token
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ListTrackInfoResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"         
  /user/check-favorite:
    x-swagger-router-controller: user
    get:
      description: Check if user like track
      operationId: checkFavoriteSong
      parameters:
        - name: token
          in: query
          description: Token
          required: true
          type: string
        - name: trackid
          in: query
          description: track id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /user/put-favorite:
    x-swagger-router-controller: user
    get:
      description: Update favorite song
      operationId: putFavoriteSong
      parameters:
        - name: token
          in: query
          description: Token
          required: true
          type: string
        - name: trackid
          in: query
          description: track id
          required: true
          type: string
        - name: like
          in: query
          description: like or unlike
          required: true
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /track/search:
    x-swagger-router-controller: track
    get:
      description: Search track
      operationId: searchTrack
      parameters:
        - name: keyword
          in: query
          description: keyword
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /track/search-api-title:
    x-swagger-router-controller: track
    get:
      description: Search track from Spotify API follow title of track
      operationId: searchTrackAPI
      parameters:
        - name: title
          in: query
          description: keyword
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /track/lated:
    x-swagger-router-controller: track
    get:
      description: get lated track
      operationId: getLatedTrack
      parameters:
        - name: token
          in: query
          description: token
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /artist/get-artist:
    x-swagger-router-controller: track
    get:
      description: get artist info
      operationId: getArtist
      parameters:
        - name: id
          in: query
          description: artist id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /artist/search:
    x-swagger-router-controller: track
    get:
      description: Search artist
      operationId: searchArtist
      parameters:
        - name: keyword
          in: query
          description: keyword
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /artist/search-api:
    x-swagger-router-controller: track
    get:
      description: Search artist from Spotify API 
      operationId: searchArtistAPI
      parameters:
        - name: name
          in: query
          description: name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /crawl:
    x-swagger-router-controller: crawler
    get:
      description: crawl data
      operationId: crawl
      parameters:
        - name: startDate
          in: query
          description: start date yyyy-MM-dd
          required: true
          type: string
        - name: endDate
          in: query
          description: end date yyyy-MM-dd
          type: string
          required: true
        - name: genreType
          in: query
          description: genreType
          type: integer
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"
  /model/build-model:
    x-swagger-router-controller: model
    get:
      description: build classification model
      operationId: buildModel
      parameters:
        - name: startDate
          in: query
          description: start date yyyy-MM-dd
          type: string
        - name: endDate
          in: query
          description: end date yyyy-MM-dd
          type: string
        - name: genreType
          in: query
          description: genreType
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"      
  /chart/get-report:
    x-swagger-router-controller: chart
    get:
      description: get chart analysis report
      operationId: getChartReport
      parameters:
        - name: startDate
          in: query
          description: start date yyyy-MM-dd
          type: string
        - name: endDate
          in: query
          description: end date yyyy-MM-dd
          type: string
        - name: genreType
          in: query
          description: genreType
          type: integer
        - name: userSelect
          in: query
          description: whether getting report by interact of user
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"  
  /chart/get-report-home:
    x-swagger-router-controller: chart
    get:
      description: get chart analysis report for home page
      operationId: getChartReportHomePage
      parameters:
        - name: key
          in: query
          description: key
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response" 
  /savearff:
    x-swagger-router-controller: model
    get:
      description: save arff data to database
      operationId: saveArffData
      parameters:
        - name: key
          in: query
          description: key
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"   
  /model/build-genre-model:
    x-swagger-router-controller: model
    get:
      description: build genre classification model
      operationId: buildGenreModel
      parameters:
        - name: key
          in: query
          description: key
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Response"        
# complex objects have schema definitions
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  TrackInfoResponse:
    properties:
      id:
        type: string
      title:
        type: string
      artist:
        type: string
      artist_imageurl:
        type: string
      genre:
        type: string
      genre_imageurl:
        type: string
      imageurl:
        type: string
      url:
        type: string
      like:
        type: number
      listen:
        type: number
  TrackFeatureResponse:
    properties:
      speechiness:
        type: number
      acousticness:
        type: number
      instrumentalness:
        type: number
      liveness:
        type: number
      valence:
        type: number
      duration_ms:
        type: number
      tempo:
        type: number
      time_signature:
        type: number
      mode:
        type: number
      key:
        type: number
      loudness:
        type: number
      danceability:
        type: number
      energy:
        type: number
  TrackResponse:
    properties:
      info:
        type: object
        $ref: "#/definitions/TrackInfoResponse"
      lyric:
        type: string
      feature:
        type: object
        $ref: "#/definitions/TrackFeatureResponse"
      hit:
        type: boolean
  UserResponse:
    properties:
      username:
        type: string
      fullname:
        type: string
      expire:
        type: number
      token:
        type: string
  UserInfoSignUp:
    properties:
      username:
        type: string
      fullname:
        type: string
      password:
        type: string 
  UserInfo:
    properties:
      username:
        type: string
      password:
        type: string
  ListTrackInfoResponse:
    properties:
      status:
        type: integer
      listTrackInfo:
        type: array
        items:
          $ref: "#/definitions/TrackInfoResponse"
  ListArtistResponse:
    properties:
      status:
        type: integer
      listArtistResponse:
        type: array
        items:
          $ref: "#/definitions/ArtistResponse"
  ArtistResponse:
    properties:
      id:
        type: string
      name:
        type: string
      imageurl:
        type: string
  Response:
    properties:
      status:
        type: integer
      message:
        type: string
  
